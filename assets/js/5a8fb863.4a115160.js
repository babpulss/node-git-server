"use strict";(self.webpackChunknode_git_server=self.webpackChunknode_git_server||[]).push([[8176],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,o=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=u(r),f=p,m=d["".concat(l,".").concat(f)]||d[f]||s[f]||o;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function f(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var o=r.length,i=new Array(o);i[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:p,i[1]=a;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6647:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var n=r(7462),p=r(3366),o=(r(7294),r(3905)),i=["components"],a={id:"node-git-server.httpduplex.req",hide_title:!0,custom_edit_url:null,title:"HttpDuplex.req property"},l=void 0,u={unversionedId:"api/node-git-server.httpduplex.req",id:"api/node-git-server.httpduplex.req",title:"HttpDuplex.req property",description:"Home > node-git-server > HttpDuplex > req",source:"@site/docs/api/node-git-server.httpduplex.req.md",sourceDirName:"api",slug:"/api/node-git-server.httpduplex.req",permalink:"/node-git-server/docs/api/node-git-server.httpduplex.req",editUrl:null,tags:[],version:"current",frontMatter:{id:"node-git-server.httpduplex.req",hide_title:!0,custom_edit_url:null,title:"HttpDuplex.req property"},sidebar:"tutorialSidebar",previous:{title:"HttpDuplex.repo property",permalink:"/node-git-server/docs/api/node-git-server.httpduplex.repo"},next:{title:"HttpDuplex.res property",permalink:"/node-git-server/docs/api/node-git-server.httpduplex.res"}},c=[{value:"HttpDuplex.req property",id:"httpduplexreq-property",children:[],level:2}],s={toc:c};function d(e){var t=e.components,r=(0,p.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/node-git-server/docs/"},"Home")," > ",(0,o.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server"},"node-git-server")," > ",(0,o.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server.httpduplex"},"HttpDuplex")," > ",(0,o.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server.httpduplex.req"},"req")),(0,o.kt)("h2",{id:"httpduplexreq-property"},"HttpDuplex.req property"),(0,o.kt)("p",null,"A IncomingMessage created by http.Server or http.ClientRequest usually passed as the first parameter to the 'request' and 'response' events. Implements Readable Stream interface but may not be a decendant thereof."),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"req: http.IncomingMessage;\n")))}d.isMDXComponent=!0}}]);