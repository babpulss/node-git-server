"use strict";(self.webpackChunknode_git_server=self.webpackChunknode_git_server||[]).push([[5298],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,g=d["".concat(i,".").concat(m)]||d[m]||s[m]||a;return r?n.createElement(g,p(p({ref:t},c),{},{components:r})):n.createElement(g,p({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,p[1]=l;for(var u=2;u<a;u++)p[u]=r[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6266:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),p=["components"],l={id:"node-git-server.httpduplex._constructor_",hide_title:!0,custom_edit_url:null,title:"HttpDuplex.(constructor)"},i=void 0,u={unversionedId:"api/node-git-server.httpduplex._constructor_",id:"api/node-git-server.httpduplex._constructor_",title:"HttpDuplex.(constructor)",description:"Home > node-git-server > HttpDuplex > (constructor)",source:"@site/docs/api/node-git-server.httpduplex._constructor_.md",sourceDirName:"api",slug:"/api/node-git-server.httpduplex._constructor_",permalink:"/node-git-server/docs/api/node-git-server.httpduplex._constructor_",editUrl:null,tags:[],version:"current",frontMatter:{id:"node-git-server.httpduplex._constructor_",hide_title:!0,custom_edit_url:null,title:"HttpDuplex.(constructor)"},sidebar:"tutorialSidebar",previous:{title:"HeadData.repo property",permalink:"/node-git-server/docs/api/node-git-server.headdata.repo"},next:{title:"HttpDuplex.accept() method",permalink:"/node-git-server/docs/api/node-git-server.httpduplex.accept"}},c=[{value:"HttpDuplex.(constructor)",id:"httpduplexconstructor",children:[],level:2},{value:"Parameters",id:"parameters",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],s={toc:c};function d(e){var t=e.components,r=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/node-git-server/docs/"},"Home")," > ",(0,a.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server"},"node-git-server")," > ",(0,a.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server.httpduplex"},"HttpDuplex")," > ",(0,a.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server.httpduplex._constructor_"},"(constructor)")),(0,a.kt)("h2",{id:"httpduplexconstructor"},"HttpDuplex.(constructor)"),(0,a.kt)("p",null,"Constructs a proxy object over input and output resulting in a unified stream. Generally meant to combine request and response streams in the http.request event"),(0,a.kt)("b",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"constructor(input: http.IncomingMessage, output: http.ServerResponse);\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"input"),(0,a.kt)("td",{parentName:"tr",align:null},"http.IncomingMessage"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"output"),(0,a.kt)("td",{parentName:"tr",align:null},"http.ServerResponse"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("caption",null," A simple example is shown below "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"http\n  .createServer(function (req, res) {\n    var dup = new HttpDuplex(req, res);\n    res.end('Request: ' + req.method + ' ' + req.url);\n  })\n  .listen(80);\n")))}d.isMDXComponent=!0}}]);