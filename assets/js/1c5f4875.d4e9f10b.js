"use strict";(self.webpackChunknode_git_server=self.webpackChunknode_git_server||[]).push([[5572],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,v=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(v,o(o({ref:t},s),{},{components:n})):r.createElement(v,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3500:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={id:"node-git-server.gitevents.on_2",hide_title:!0,custom_edit_url:null,title:"GitEvents.on() method"},p=void 0,c={unversionedId:"api/node-git-server.gitevents.on_2",id:"api/node-git-server.gitevents.on_2",title:"GitEvents.on() method",description:"Home > node-git-server > GitEvents > on",source:"@site/docs/api/node-git-server.gitevents.on_2.md",sourceDirName:"api",slug:"/api/node-git-server.gitevents.on_2",permalink:"/node-git-server/docs/api/node-git-server.gitevents.on_2",editUrl:null,tags:[],version:"current",frontMatter:{id:"node-git-server.gitevents.on_2",hide_title:!0,custom_edit_url:null,title:"GitEvents.on() method"},sidebar:"tutorialSidebar",previous:{title:"GitEvents.on() method",permalink:"/node-git-server/docs/api/node-git-server.gitevents.on_1"},next:{title:"GitEvents.on() method",permalink:"/node-git-server/docs/api/node-git-server.gitevents.on_3"}},s=[{value:"GitEvents.on() method",id:"giteventson-method",children:[],level:2},{value:"Parameters",id:"parameters",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],d={toc:s};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/node-git-server/docs/"},"Home")," > ",(0,i.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server"},"node-git-server")," > ",(0,i.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server.gitevents"},"GitEvents")," > ",(0,i.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server.gitevents.on_2"},"on")),(0,i.kt)("h2",{id:"giteventson-method"},"GitEvents.on() method"),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"on(event: 'fetch', listener: (fetch: FetchData) => void): this;\n")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"event"),(0,i.kt)("td",{parentName:"tr",align:null},"'fetch'"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"listener"),(0,i.kt)("td",{parentName:"tr",align:null},"(fetch: ",(0,i.kt)("a",{parentName:"td",href:"/node-git-server/docs/api/node-git-server.fetchdata"},"FetchData"),") => void"),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("b",null,"Returns:"),(0,i.kt)("p",null,"this"),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"repos.on('fetch', function (fetch) { ... }"),(0,i.kt)("p",null,"Emitted when somebody does a ",(0,i.kt)("inlineCode",{parentName:"p"},"git fetch")," to the repo (which happens whenever you do a ",(0,i.kt)("inlineCode",{parentName:"p"},"git pull")," or a ",(0,i.kt)("inlineCode",{parentName:"p"},"git clone"),")."),(0,i.kt)("p",null,"Exactly one listener must call ",(0,i.kt)("inlineCode",{parentName:"p"},"fetch.accept()")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"fetch.reject()"),". If there are no listeners, ",(0,i.kt)("inlineCode",{parentName:"p"},"fetch.accept()")," is called automatically."))}u.isMDXComponent=!0}}]);