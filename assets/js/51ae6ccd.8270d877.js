"use strict";(self.webpackChunknode_git_server=self.webpackChunknode_git_server||[]).push([[9369],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,g=d["".concat(l,".").concat(f)]||d[f]||c[f]||a;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3838:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],p={id:"node-git-server.inforesponse",hide_title:!0,custom_edit_url:null,title:"infoResponse() function"},l=void 0,s={unversionedId:"api/node-git-server.inforesponse",id:"api/node-git-server.inforesponse",title:"infoResponse() function",description:"Home > node-git-server > infoResponse",source:"@site/docs/api/node-git-server.inforesponse.md",sourceDirName:"api",slug:"/api/node-git-server.inforesponse",permalink:"/node-git-server/docs/api/node-git-server.inforesponse",editUrl:null,tags:[],version:"current",frontMatter:{id:"node-git-server.inforesponse",hide_title:!0,custom_edit_url:null,title:"infoResponse() function"},sidebar:"tutorialSidebar",previous:{title:"InfoData.repo property",permalink:"/node-git-server/docs/api/node-git-server.infodata.repo"},next:{title:"node-git-server package",permalink:"/node-git-server/docs/api/node-git-server"}},u=[{value:"infoResponse() function",id:"inforesponse-function",children:[],level:2},{value:"Parameters",id:"parameters",children:[],level:2}],c={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/node-git-server/docs/"},"Home")," > ",(0,a.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server"},"node-git-server")," > ",(0,a.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server.inforesponse"},"infoResponse")),(0,a.kt)("h2",{id:"inforesponse-function"},"infoResponse() function"),(0,a.kt)("p",null,"sends http response using the appropriate output from service call"),(0,a.kt)("b",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare function infoResponse(git: Git, repo: string, service: ServiceString, req: http.IncomingMessage, res: http.ServerResponse): void;\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"git"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/node-git-server/docs/api/node-git-server.git"},"Git")),(0,a.kt)("td",{parentName:"tr",align:null},"an instance of git object")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"repo"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"the repository")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"service"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/node-git-server/docs/api/node-git-server.servicestring"},"ServiceString")),(0,a.kt)("td",{parentName:"tr",align:null},"the method that is responding infoResponse (push, pull, clone)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"req"),(0,a.kt)("td",{parentName:"tr",align:null},"http.IncomingMessage"),(0,a.kt)("td",{parentName:"tr",align:null},"http request object")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"res"),(0,a.kt)("td",{parentName:"tr",align:null},"http.ServerResponse"),(0,a.kt)("td",{parentName:"tr",align:null},"http response")))),(0,a.kt)("b",null,"Returns:"),(0,a.kt)("p",null,"void"))}d.isMDXComponent=!0}}]);