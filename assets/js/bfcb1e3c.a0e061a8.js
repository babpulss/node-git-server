"use strict";(self.webpackChunknode_git_server=self.webpackChunknode_git_server||[]).push([[2861],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),d=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=d(r),m=a,h=c["".concat(p,".").concat(m)]||c[m]||s[m]||i;return r?n.createElement(h,l(l({ref:t},u),{},{components:r})):n.createElement(h,l({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<i;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},7022:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return u},default:function(){return c}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l=["components"],o={id:"node-git-server.httpduplex.writehead",hide_title:!0,custom_edit_url:null,title:"HttpDuplex.writeHead() method"},p=void 0,d={unversionedId:"api/node-git-server.httpduplex.writehead",id:"api/node-git-server.httpduplex.writehead",title:"HttpDuplex.writeHead() method",description:"Home > node-git-server > HttpDuplex > writeHead",source:"@site/docs/api/node-git-server.httpduplex.writehead.md",sourceDirName:"api",slug:"/api/node-git-server.httpduplex.writehead",permalink:"/node-git-server/docs/api/node-git-server.httpduplex.writehead",editUrl:null,tags:[],version:"current",frontMatter:{id:"node-git-server.httpduplex.writehead",hide_title:!0,custom_edit_url:null,title:"HttpDuplex.writeHead() method"},sidebar:"tutorialSidebar",previous:{title:"HttpDuplex.writable property",permalink:"/node-git-server/docs/api/node-git-server.httpduplex.writable"},next:{title:"InfoData interface",permalink:"/node-git-server/docs/api/node-git-server.infodata"}},u=[{value:"HttpDuplex.writeHead() method",id:"httpduplexwritehead-method",children:[],level:2},{value:"Parameters",id:"parameters",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],s={toc:u};function c(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/node-git-server/docs/"},"Home")," > ",(0,i.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server"},"node-git-server")," > ",(0,i.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server.httpduplex"},"HttpDuplex")," > ",(0,i.kt)("a",{parentName:"p",href:"/node-git-server/docs/api/node-git-server.httpduplex.writehead"},"writeHead")),(0,i.kt)("h2",{id:"httpduplexwritehead-method"},"HttpDuplex.writeHead() method"),(0,i.kt)("p",null,"Sends a response header to the client request. Must only be called one time and before calling response.end()."),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"writeHead(statusCode: number, statusMessage: string, headers: string[]): this;\n")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"statusCode"),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},"3-digit HTTP status code, like 404")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"statusMessage"),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"An optional human readable status message to send with the status code")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"headers"),(0,i.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,i.kt)("td",{parentName:"tr",align:null},"An object containing the response headers to send")))),(0,i.kt)("b",null,"Returns:"),(0,i.kt)("p",null,"this"),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"var content = 'Under Construction...'; response.writeHead(200, { 'Content-Length': Buffer.byteLength(content), 'Content-Type': 'text/plain' }","); response.end(content);"))}c.isMDXComponent=!0}}]);